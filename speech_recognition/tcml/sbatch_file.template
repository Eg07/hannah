#!/bin/bash

####
#a) Define slurm job parameters
####

#SBATCH --job-name=$tcml_name

#resources:

#SBATCH --cpus-per-task=$tcml_ncpus
# the job can use and see 4 CPUs (from max 24).

#SBATCH --partition=$tcml_partition
# the slurm partition the job is queued to.

#SBATCH --mem-per-cpu=$tcml_mem
# the job will need 12GB of memory equally distributed on 4 cpus.  (251GB are available in total on one node)

#SBATCH --gres=gpu:$tcml_ngpus
#the job can use and see 1 GPUs (4 GPUs are available in total on one node)

#SBATCH --time=$tcml_estimated_time_with_buffer
# the maximum time the scripts needs to run

#SBATCH --error=runs/job.$tcml_job_id.err
# write the error output to job.*jobID*.err

#SBATCH --output=runs/job.$tcml_job_id.out
# write the standard output to job.*jobID*.out

#SBATCH --mail-type=ALL
#write a mail if a job begins, ends, fails, gets requeued or stages out

#SBATCH --mail-user=$tcml_user_mail
# your mail address


#Script
echo "Copy training data"

cd $tcml_wd
mkdir -p /scratch/$SLURM_JOB_ID/$tcml_output_dir
mkdir -p /scratch/$SLURM_JOB_ID/$tcml_data_dir


cp -R $tcml_wd/$tcml_data_dir /scratch/$SLURM_JOB_ID/

echo "Running training"
singularity exec --nv tcml-cluster/Speech-Recognition.simg  python3.6 -m speech_recognition.train --config $tcml_wd/runs/config.$tcml_job_id.json --data_folder /scratch/$SLURM_JOB_ID/$tcml_data_dir --output_dir /scratch/$SLURM_JOB_ID/$tcml_output_dir --max_runtime $tcml_estimated_runtime

echo "Copy back output"
cp -R /scratch/$SLURM_JOB_ID/$tcml_output_dir/* $tcml_wd/$tcml_output_dir

echo DONE!