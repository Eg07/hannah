

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_HOME: "$CI_PROJECT_DIR/.poetry"
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  paths:
    - ./venv

before_script:
  - cat /etc/os-release
  - source /etc/os-release
  - if [[ $ID == "debian" || $ID == "ubuntu" ]]; then
  -   sudo apt update
  -   sudo apt -y install python3-dev freeglut3-dev portaudio19-dev libblas-dev liblapack-dev
  - else
  -   yum install epel-release -y
  -   yum install git sudo python36 -y
  -   yum install wget curl -y
  -   yum groupinstall 'Development Tools' -y
  - fi
  - python3 -m ensurepip
  - python3 -V # Print out python version for debugging
  - python3 -m pip install virtualenv
  
  # Install poetry using recommended method
  - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
  - export PATH=${POETRY_HOME}/bin:${PATH}
  

  # create virtual environment for tests 
  - virtualenv venv -p python3
  - source venv/bin/activate
 

  # install and manage dependencies with poetry
  - poetry install
  - cd datasets
  - ./get_datasets.sh
  - cd ..
  

test:
  image: centos:7
  script:
    - set -e 
    - source venv/bin/activate
    - python3 -m pytest test
    - python3 -m speech_recognition.train --seed 1234 --model tc-res8  --experiment-id ci  --n-epoch=5 --no-cuda
    - python3 -m speech_recognition.train --seed 1234 --model tc-res8 --experiment-id ci_prof --n-epoch=1 --profile
  tags:
    - docker



test_latest_python:
  image: python:latest
  script:
    - set -e 
    - source venv/bin/activate
    - python3 -m pytest test
    - python3 -m speech_recognition.train --seed 1234 --model tc-res8  --experiment-id ci  --n-epoch=5 --no-cuda
    - python3 -m speech_recognition.train --seed 1234 --model tc-res8 --experiment-id ci_prof --n-epoch=1 --profile
  tags:
    - docker
